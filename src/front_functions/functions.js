import axios from 'axios';
import React, { useState, useEffect } from 'react';



// /----------------------------------------------------------------------------------------------------------------------------------------------
// /getData - get запрос на сервер для получения списка json данных
export const getData = async (backServerPath, datas, setDatas) => {
    let answer;
    let answers = [];
    try {
      // Начинаем процесс загрузки
        console.log(`Начат процесс получения данных от ${backServerPath}`);


      // /-------------------------------------------------------------------------------------------------------
      // /axios get
        //await axios.get('http://127.0.0.1:8000/')
        await axios.get(backServerPath)
        .then(response => {
            console.log(`response.data[0] is: ${response.data[0].title}: ${response.data[0].content}`)
            setDatas({
                // В состояние datas, которое хранит объект, единственным элементом которого является пара ключ-значение 
                // ключ - details, значение - массив 
                details: response.data
                // Теперь надо узнать, что это. Я думаю, что это массив со строками, где каждая строка - хранимый json/
                // Как теперь пройтись по этому массиву? Если это конечно массив
            });                
            console.log(`axios: Данные получены от ${backServerPath} получены.`)
        })
        .catch(err => {
            console.log(`axios: Ошибка получения данных от сервера: ${err}.`);
        })
        ;
      // axios get/
      // -------------------------------------------------------------------------------------------------------/

      
      // /-------------------------------------------------------------------------------------------------------
      // /Работа с полученным от axios массивом
      // Метода map позволяет трансформировать один массив в друго, последовательно обращаясь к каждому элементу
      // тут он используется для перебора значение массива details
      console.log(`Вывод данных из datas.details:`)
      datas.details.map((el) => {
        console.log(`details: response.data is: ${el.title}`)
      })
      // Этот метод для перебора значений тоже работает
      for (let item of datas.details) {
        console.log(`item.content is: ${item.title}`)
      }
      // И этот тоже...
      datas.details.forEach(element => {
        console.log(`datas.details.forEach is: ${element.title}`)
      });
      // Работа с полученным от axios массивом/
      // -------------------------------------------------------------------------------------------------------/
    } catch (e) {
      console.log(e);
    }
}
// getData/
// ----------------------------------------------------------------------------------------------------------------------------------------------/


// /----------------------------------------------------------------------------------------------------------------------------------------------
// /postAuthorization - post запрос на сервер для авторизации пользователя
export const postAuthorization = async (backServerPath, login, password) => {
    let answers = [];

    try {
      // Начинаем процесс отправки
        console.log(`Начат процесс отправки данных на ${backServerPath}`);
        const postStr = {"title": `${login}`, "content": `${password}`}

      // /-------------------------------------------------------------------------------------------------------
      // /axios post
        //await axios.post('http://127.0.0.1:8000/')
        console.log("Начало отправки")
        const response = await axios.post(backServerPath, postStr);
        
        console.log("Отправлено")
        //console.log(`Server return to post: ${response.data.title}`);
        
      // axios post/
      // -------------------------------------------------------------------------------------------------------/

      
    } catch (err) {
        console.log(`axios: Ошибка отправки данных серверу: ${err}.`);
    }
}
// postAuthorization/
// ----------------------------------------------------------------------------------------------------------------------------------------------/


